"""Generator for Datasource Enums and Config entities."""

import argparse
from datetime import datetime

import yaml
from jinja2 import Template

GenMessage = Template(
    '''"""Code generated by gen.py; DO NOT EDIT.
This file was generated by robots at
{{ timestamp }}"""'''
)

Enums = Template(
    '''
from enum import Enum

class ConfigElem(Enum):
    """Enumeration of valid config elements."""

    {% for value in datasource_fields -%}
    {{ value | upper }} = "{{ value }}"
    {% endfor %}

class CredElem(Enum):
    """Enumeration of valid credential elements."""

    {% for value in auth_fields -%}
    {{ value | upper }} = "{{ value }}"
    {% endfor %}'''
)

Configs = Template(
    '''
from attrs import define, field

{% for config in configs -%}
@define
class {{ config.name }}(Config):
    """{{ config.name }} datasource configuration."""

    {% for key, value in config.fields -%}
    {{ key }}: Optional[str] = _config(elem=ConfigElem.{{ value }})
    {% endfor %}

    {% for key, value in config.credentials -%}
    {{ key }}: Optional[str] = _cred(elem=CredElem.{{ value }})
    {% endfor %}
{% endfor %}
'''
)


def main(args):
    """Entrypoint for code generation."""
    with open(args.openapi, encoding="ascii") as openapi:
        schemas = yaml.load(openapi, Loader=yaml.FullLoader)["components"]["schemas"]

    with open(args.config, encoding="ascii") as config_file:
        configs = yaml.load(config_file, Loader=yaml.FullLoader)

    with open(args.file, "w", encoding="ascii") as gen:
        gen.write(GenMessage.render(timestamp=datetime.utcnow()))
        gen.write(
            Enums.render(
                auth_fields=schemas["AuthFieldName"]["enum"],
                datasource_fields=schemas["DatasourceFieldName"]["enum"],
            )
        )
        gen.write(
            Configs.render(),
        )


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--openapi",
        default="services/datasource/openapi.yaml",
    )
    parser.add_argument(
        "--file",
        default="domino_data/configuration_gen.py",
    )
    main(parser.parse_args())
