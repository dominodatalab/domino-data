openapi: 3.0.0

info:
  title: FeatureStore API
  description: Feature Store metadata service
  version: 0.1.0

paths:
  /{featureStoreName}:
    post:
      summary: Create FeatureStore
      parameters:
        - in: path
          name: featureStoreName
          required: true
          schema:
            type: string
            minimum: 1
          description: FeatureStore name
      requestBody:
        description: CreateFeatureStoreRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureStoreRequest'
      responses:
        '200':
          description: The new FeatureStore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStore'
    get:
      summary: Get Feature Store
      parameters:
        - in: path
          name: featureStoreName
          required: true
          schema:
            type: string
            minimum: 1
          description: FeatureStore name
      responses:
        '200':
          description: The FeatureStore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStore'
  /{featureStoreName}/featureview:
    post:
      summary: Create FeatureViews
      parameters:
        - in: path
          name: featureStoreName
          required: true
          schema:
            type: string
            minimum: 1
          description: FeatureStore name
      requestBody:
        description: CreateFeatureViewsRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureViewsRequest'
      responses:
        '200':
          description: Success


components:
  schemas:
    FeatureStore:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        name:
          type: string
        creationTime:
          type: string
          format: date-time
        dataSourceName:
          type: string
      required:
        - id
        - projectId
        - name
        - creationTime
        - dataSourceName
    FeatureView:
      type: object
      properties:
        name:
          type: string
        ttl:
          type: string
        entities:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
        batchSource:
          $ref: '#/components/schemas/BatchSource'
        online:
          type: boolean
        tags:
          type: object
          additionalProperties:
            type: string
      required:
        - name
        - features
        - entities
        - batchSource
    FeatureViewDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        featureStoreId:
          type: string
        ttl:
          type: string
        entities:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
        batchSource:
          $ref: '#/components/schemas/BatchSource'
        online:
          type: boolean
        tags:
          type: object
          additionalProperties:
            type: string
      required:
        - id
        - name
        - featureStoreId
        - features
        - entities
        - batchSource
    Feature:
      type: object
      properties:
        name:
          type: string
        valueType:
          type: string
      required:
        - name
        - valueType
    Entity:
      type: object
      properties:
        name:
          type: string
        joinKey:
          type: string
        valueType:
          type: string
      required:
        - name
        - valueType
    BatchSource:
      type: object
      properties:
        eventTimestampColumn:
          type: string
        createdTimestampColumn:
          type: string
        datePartitionColumn:
          type: string
        database:
          type: string
        query:
          type: string
        table:
          type: string
    CreateFeatureStoreRequest:
      type: object
      properties:
        name:
          type: string
        projectId:
          type: string
        bucket:
          type: string
        region:
          type: string
        visibleCredential:
          type: string
        secretCredential:
          type: string
      required:
        - name
        - projectId
        - bucket
        - region
        - visibleCredential
        - secretCredential
    CreateFeatureViewsRequest:
      type: object
      properties:
        name:
          type: string
        featureViews:
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
      required:
        - name
        - featureViews
