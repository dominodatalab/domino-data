openapi: 3.0.3

info:
  title: Datasources TBD
  description: Define datasource and credential configuration shapes.
  version: 0.0.3

paths: {}

components:
  schemas:
    # Enums
    #
    AuthFieldName:
      type: string
      enum:
        - accessKey
        - accessKeyID
        - password
        - privateKey
        - secretAccessKey
        - sessionToken
        - token
        - username
        - clientId
        - clientSecret
        - personalAccessToken
        - apiKey
        - oAuthToken
        - sslCert
        - sslKey
        - sslRootCert
    AuthType:
      type: string
      enum:
        - AzureBasic
        - Basic
        - GCPBasic
        - AWSIAMBasic
        - AWSIAMBasicNoOverride
        - AWSIAMRole
        - AWSIAMRoleWithUsername
        - OAuth
        - PersonalToken
        - UserOnly
        - BasicOptional
        - NoAuth
        - ClientIdSecret
        - OAuthToken
        - APIKey
        - CertAuth
    DatasourceFieldName:
      type: string
      enum:
        - accountName
        - accountID
        - bucket
        - catalog
        - cluster
        - database
        - datasetID
        - datetimePrecision
        - extraProperties
        - host
        - httpPath
        - networkingProxy
        - port
        - project
        - region
        - role
        - schema
        - subfolder
        - warehouse
        - catalogCode
        - environment
        - snapshotID
        - sslEnabled
    DatasourceType:
      type: string
      enum:
        - ADLSConfig
        - AzureBlobStorageConfig
        - BigQueryConfig
        - ClickHouseConfig
        - DatabricksConfig
        - DatasetConfig
        - DB2Config
        - DruidConfig
        - GCSConfig
        - GenericJDBCConfig
        - GenericS3Config
        - GreenplumConfig
        - IgniteConfig
        - MariaDBConfig
        - MongoDBConfig
        - MySQLConfig
        - NetezzaConfig
        - OracleConfig
        - PalantirConfig
        - PineconeConfig
        - PostgreSQLConfig
        - QdrantConfig
        - RedshiftConfig
        - S3Config
        - SAPHanaConfig
        - SingleStoreConfig
        - SQLServerConfig
        - SnowflakeConfig
        - SynapseConfig
        - TabularS3GlueConfig
        - TeradataConfig
        - TrinoConfig
        - VerticaConfig
    ErrorType:
      type: string
      enum:
        - configObjectError
        - credentialsError
        - decodingError
        - internalError
        - validationError
    ErrorSubType:
      type: string
      enum:
        - invalidAccountName
        - invalidBucket
        - invalidCatalog
        - invalidCatalogOrSchema
        - invalidDatabase
        - invalidDatabaseOrCredential
        - invalidEnvironment
        - invalidHost
        - invalidHostOrPort
        - invalidHTTPPath
        - invalidHTTPScheme
        - invalidPort
        - invalidProject
        - invalidRegion
        - invalidRole
        - invalidSchema
        - invalidSubfolder
        - invalidWarehouse
        - timeout
    EngineType:
      type: string
      enum:
        - Domino
        - Starburst
    ConnectorGroup:
      type: string
      enum:
        - Native
        - Starburst
        - StarburstSelfService
        - ReverseProxy
    EngineFieldName:
      type: string
      enum:
        - catalogEntryName
    MetaFieldName:
      type: string
      enum:
        - tokenLocation
    StorageType:
      type: string
      enum:
        - Tabular
        - ObjectStore
        - Vector
    # Entities
    #
    AuthConfig:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/AuthType'
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Field'
        meta:
          type: object
          additionalProperties:
            type: string
      required:
        - fields
        - meta
        - type
    DatasourceConfig:
      type: object
      properties:
        authTypes:
          type: array
          items:
            $ref: '#/components/schemas/AuthType'
        connectorGroup:
          $ref: '#/components/schemas/ConnectorGroup'
        connectorType:
          type: string
        datasourceType:
          $ref: '#/components/schemas/DatasourceType'
        engineType:
          $ref: '#/components/schemas/EngineType'
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Field'
        isHidden:
          type: boolean
        storageType:
          $ref: '#/components/schemas/StorageType'
      required:
        - authTypes
        - datasourceType
        - fields
        - type
    Field:
      type: object
      properties:
        alias:
          type: string
        initialValue:
          type: string
        isOptional:
          type: boolean
        isOverridable:
          type: boolean
        isSecret:
          type: boolean
        name:
          type: string
        placeholder:
          type: string
        regexp:
          type: string
        regexpErrorMessage:
          type: string
      required:
        - isOptional
        - isOverridable
        - name
