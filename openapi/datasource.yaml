openapi: 3.0.0

info:
  contact:
    name: Gabriel Haim
    email: gabriel.haim@dominodatalab.com
  description: Lightweight Datasource API for Domino Data API usage.
  title: Datasource API
  version: 0.0.1

tags:
  - name: Datasource
    description: Datasource operations
  - name: Proxy
    description: Proxy operations

paths:
  /objectstore/key:
    post:
      operationId: getKeyUrl
      tags:
        - Proxy
      summary: Request a new signed URL for the key of a object store
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: The server could not understand the request due to malformed syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyErrorResponse'
        '500':
          description: An internal error prevented the server from performing this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyErrorResponse'
  /objectstore/list:
    post:
      operationId: listKeys
      tags:
        - Proxy
      summary: Request a new signed URL for a blob datasource
      requestBody:
        description: Request body for a key in blob datasource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: The server could not understand the request due to malformed syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyErrorResponse'
        '500':
          description: An internal error prevented the server from performing this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyErrorResponse'
  /objectstore/metric:
    head:
      operationId: logMetric
      tags:
        - Proxy
      summary: Log metrics about file size read or written
      parameters:
        - in: query
          name: t
          description: Datasource type
          schema:
            type: string
            enum:
              - ADLSConfig
              - GCSConfig
              - GenericS3Config
              - S3Config
          required: true
        - in: query
          name: b
          description: Bytes processed
          schema:
            type: integer
          required: true
        - in: query
          name: m
          description: Processing mode
          schema:
            type: string
            enum: [read, write]
          required: true
      responses:
        '200':
          description: success
  /datasource/name/{name}:
    get:
      operationId: getDatasourceByName
      tags:
        - Datasource
      summary: Get datasource by name
      parameters:
        - schema:
            type: string
          in: path
          name: name
          required: true
        - schema:
            type: string
          in: query
          name: runId
          required: false
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceDto'
        '400':
          description: The server could not understand the request due to malformed syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: The current user cannot perform this operation because they are not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: The current user is not authorized to perform this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The server could not find the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An internal error prevented the server from performing this action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
    DatasourceOwnerInfo:
      type: object
      properties:
        ownerName:
          type: string
        ownerEmail:
          type: string
        isOwnerAdmin:
          type: boolean
      required:
        - ownerName
        - ownerEmail
        - isOwnerAdmin
    DatasourceConfig:
      type: object
      properties: {}
    DatasourceDto:
      type: object
      properties:
        addedBy:
          type: object
          additionalProperties:
            type: string
        authType:
          type: string
          enum:
            - AzureBasic
            - Basic
            - AWSIAMBasic
            - AWSIAMBasicNoOverride
            - AWSIAMRole
            - AWSIAMRoleWithUsername
            - GCPBasic
            - OAuth
            - ClientIdSecret
        config:
          $ref: '#/components/schemas/DatasourceConfig'
        dataSourceType:
          type: string
          enum:
            - ADLSConfig
            - BigQueryConfig
            - ClickHouseConfig
            - DB2Config
            - DruidConfig
            - GCSConfig
            - GenericJDBCConfig
            - GenericS3Config
            - GreenplumConfig
            - IgniteConfig
            - MariaDBConfig
            - MongoDBConfig
            - MySQLConfig
            - NetezzaConfig
            - OracleConfig
            - PalantirConfig
            - PhoenixConfig
            - PostgreSQLConfig
            - RedshiftConfig
            - S3Config
            - SAPHanaConfig
            - SingleStoreConfig
            - SQLServerConfig
            - SnowflakeConfig
            - SynapseConfig
            - TabularS3GlueConfig
            - TeradataConfig
            - TrinoConfig
            - VerticaConfig
        description:
          type: string
          nullable: true
        id:
          type: string
        lastUpdated:
          type: integer
        lastUpdatedBy:
          type: string
        name:
          type: string
        ownerId:
          type: string
        ownerInfo:
          $ref: '#/components/schemas/DatasourceOwnerInfo'
        projectIds:
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - Active
            - Deleted
      required:
        - addedBy
        - authType
        - config
        - dataSourceType
        - data
        - id
        - lastUpdated
        - lastUpdatedBy
        - name
        - ownerId
        - ownerInfo
        - projectIds
        - status
    ProxyErrorResponse:
      type: object
      properties:
        errorType:
          type: string
        subType:
          type: string
        rawError:
          type: string
    KeyRequest:
      type: object
      properties:
        configOverwrites:
          $ref: '#/components/schemas/DatasourceConfig'
        credentialOverwrites:
          $ref: '#/components/schemas/DatasourceConfig'
        datasourceId:
          type: string
        isReadWrite:
          type: boolean
        objectKey:
          type: string
      required:
        - datasourceId
        - isReadWrite
        - objectKey
    ListRequest:
      type: object
      properties:
        configOverwrites:
          $ref: '#/components/schemas/DatasourceConfig'
        credentialOverwrites:
          $ref: '#/components/schemas/DatasourceConfig'
        datasourceId:
          type: string
        prefix:
          type: string
        pageSize:
          type: integer
      required:
        - datasourceId
        - prefix
